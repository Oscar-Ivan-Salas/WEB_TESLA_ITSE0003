#!/usr/bin/env python3
import os
import subprocess
import sys

def create_tesla_project():
    """Crea el proyecto Tesla completo y funcional"""
    
    # Set console output encoding to UTF-8
    sys.stdout.reconfigure(encoding='utf-8')
    
    # Create project structure
    try:
        os.makedirs("tesla_complete/frontend", exist_ok=True)
        os.makedirs("tesla_complete/backend", exist_ok=True)
        
        # HTML content
        html_content = '''<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tesla Electricidad - Energ√≠a Inteligente</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* Your existing CSS styles here */
        :root {
            --primary: #1a1a2e;
            --secondary: #16213e;
            --accent: #0f3460;
            --highlight: #e94560;
            --text: #ffffff;
            --text-muted: #a0a0a0;
            --glass: rgba(255, 255, 255, 0.1);
            --glass-border: rgba(255, 255, 255, 0.2);
        }
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: var(--text);
            overflow-x: hidden;
        }
        /* Add other CSS rules here */
    </style>
</head>
<body>
    <!-- Your HTML content here -->
    <header class="header">
        <div class="container">
            <div class="logo">
                <i class="fas fa-bolt"></i>
                Tesla Electricidad
            </div>
            <nav class="nav">
                <a href="#inicio">Inicio</a>
                <a href="#servicios">Servicios</a>
                <a href="#dashboard">Dashboard</a>
                <a href="#contacto">Contacto</a>
            </nav>
        </div>
    </header>
    
    <!-- Add other sections here -->
    
    <script>
        // Your JavaScript code here
        const API_URL = 'http://localhost:8000';
        let apiOnline = false;
        let chatOpen = false;
        
        // Add your JavaScript functions here
        
    </script>
</body>
</html>'''
        
        # Write HTML file
        try:
            with open("tesla_complete/frontend/index.html", "w", encoding="utf-8") as f:
                f.write(html_content)
        :root {
            --primary: #1a1a2e;
            --secondary: #16213e;
            --accent: #0f3460;
            --highlight: #e94560;
            --text: #ffffff;
            --text-muted: #a0a0a0;
            --glass: rgba(255, 255, 255, 0.1);
            --glass-border: rgba(255, 255, 255, 0.2);
        }

        * { margin: 0; padding: 0; box-sizing: border-box; }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: var(--text);
            overflow-x: hidden;
        }

        .container { max-width: 1200px; margin: 0 auto; padding: 0 2rem; }

        /* Header */
        .header {
            position: fixed; top: 0; width: 100%;
            backdrop-filter: blur(20px); background: var(--glass);
            border-bottom: 1px solid var(--glass-border);
            z-index: 1000; padding: 1rem 0;
        }

        .header .container { display: flex; justify-content: space-between; align-items: center; }

        .logo {
            display: flex; align-items: center; gap: 0.5rem;
            font-size: 1.5rem; font-weight: 700; color: var(--highlight);
        }

        .nav { display: flex; gap: 2rem; }
        .nav a { color: var(--text); text-decoration: none; font-weight: 500; transition: color 0.3s ease; }
        .nav a:hover { color: var(--highlight); }

        /* Hero Section */
        .hero {
            min-height: 100vh; display: grid; grid-template-columns: 1fr 1fr;
            align-items: center; padding: 6rem 2rem 2rem; gap: 3rem;
        }

        .hero-content h1 {
            font-size: 3.5rem; font-weight: 700; margin-bottom: 1rem;
            background: linear-gradient(135deg, var(--text), var(--highlight));
            -webkit-background-clip: text; -webkit-text-fill-color: transparent;
        }

        .hero-content p {
            font-size: 1.2rem; color: var(--text-muted);
            margin-bottom: 2rem; line-height: 1.6;
        }

        .cta-btn {
            background: linear-gradient(135deg, var(--highlight), #ff6b6b);
            color: white; border: none; padding: 1rem 2rem; border-radius: 50px;
            font-size: 1.1rem; font-weight: 600; cursor: pointer;
            transition: all 0.3s ease; display: inline-flex;
            align-items: center; gap: 0.5rem;
        }

        .cta-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(233, 69, 96, 0.3);
        }

        /* Dashboard Preview */
        .dashboard-preview {
            background: var(--glass); backdrop-filter: blur(20px);
            border: 1px solid var(--glass-border); border-radius: 20px;
            padding: 2rem; height: 400px; display: flex; flex-direction: column; gap: 1rem;
        }

        .preview-metrics { display: grid; grid-template-columns: repeat(2, 1fr); gap: 1rem; }

        .preview-metric {
            background: rgba(233, 69, 96, 0.1); border: 1px solid rgba(233, 69, 96, 0.2);
            border-radius: 15px; padding: 1rem; text-align: center;
        }

        .metric-value {
            font-size: 2rem; font-weight: 700; color: var(--highlight);
        }

        .metric-label { font-size: 0.9rem; color: var(--text-muted); }

        /* Dashboard Section */
        .dashboard-section { padding: 6rem 2rem; }
        .dashboard-section h2 { text-align: center; font-size: 2.5rem; margin-bottom: 3rem; }

        .month-selector {
            display: flex; justify-content: center; gap: 0.5rem;
            margin-bottom: 3rem; flex-wrap: wrap;
        }

        .month-btn {
            background: var(--glass); border: 1px solid var(--glass-border);
            color: var(--text); padding: 0.5rem 1rem; border-radius: 25px;
            cursor: pointer; transition: all 0.3s ease;
        }

        .month-btn.active {
            background: var(--highlight); border-color: var(--highlight);
        }

        .metrics-grid {
            display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 2rem;
        }

        .metric-card {
            background: var(--glass); backdrop-filter: blur(20px);
            border: 1px solid var(--glass-border); border-radius: 20px;
            padding: 2rem; text-align: center; transition: transform 0.3s ease;
        }

        .metric-card:hover { transform: translateY(-5px); }
        .metric-card i { font-size: 3rem; color: var(--highlight); margin-bottom: 1rem; }
        .metric-card .value { font-size: 2.5rem; font-weight: 700; color: var(--text); margin-bottom: 0.5rem; }

        /* Services Section */
        .services-section { padding: 6rem 2rem; background: rgba(0, 0, 0, 0.2); }
        .services-section h2 { text-align: center; font-size: 2.5rem; margin-bottom: 3rem; }

        .services-grid {
            display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem;
        }

        .service-card {
            background: var(--glass); backdrop-filter: blur(20px);
            border: 1px solid var(--glass-border); border-radius: 20px;
            padding: 2rem; transition: all 0.3s ease;
        }

        .service-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        }

        .service-gallery {
            display: grid; grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(2, 1fr); gap: 8px;
            margin: 0 auto 25px; width: 240px; height: 200px;
        }

        .service-photo {
            border-radius: 10px; background: linear-gradient(135deg, var(--accent), var(--highlight));
            border: 2px solid var(--accent); transition: all 0.3s ease;
            position: relative; overflow: hidden; display: flex;
            align-items: center; justify-content: center; font-size: 2rem; color: white;
        }

        .service-photo:hover {
            transform: scale(1.05); border-color: var(--highlight);
            box-shadow: 0 5px 15px rgba(233, 69, 96, 0.3);
        }

        .service-photo:nth-child(1) { grid-column: 1 / 2; grid-row: 1 / 3; }
        .service-photo:nth-child(2) { grid-column: 2 / 3; grid-row: 1 / 2; }
        .service-photo:nth-child(3) { grid-column: 2 / 3; grid-row: 2 / 3; }

        .service-card h3 {
            color: var(--text); font-size: 1.3rem; margin-bottom: 15px; font-weight: 600;
        }

        .service-card p {
            color: var(--text-muted); line-height: 1.6; flex-grow: 1;
        }

        /* Chatbot */
        .chatbot-container { position: fixed; bottom: 2rem; right: 2rem; z-index: 1000; }

        .chatbot-toggle {
            width: 60px; height: 60px; background: linear-gradient(135deg, var(--highlight), #ff6b6b);
            border: none; border-radius: 50%; color: white; font-size: 1.5rem;
            cursor: pointer; box-shadow: 0 5px 20px rgba(233, 69, 96, 0.3);
            transition: all 0.3s ease;
        }

        .chatbot-toggle:hover { transform: scale(1.1); }

        .chatbot-window {
            position: absolute; bottom: 80px; right: 0; width: 400px; height: 500px;
            background: var(--glass); backdrop-filter: blur(20px);
            border: 1px solid var(--glass-border); border-radius: 20px;
            display: none; flex-direction: column; overflow: hidden;
        }

        .chatbot-window.open { display: flex; }

        .chatbot-header {
            background: linear-gradient(135deg, var(--highlight), #ff6b6b);
            padding: 1rem; display: flex; align-items: center; gap: 1rem;
        }

        .bot-avatar {
            width: 40px; height: 40px; background: rgba(255, 255, 255, 0.2);
            border-radius: 50%; display: flex; align-items: center; justify-content: center;
        }

        .bot-info h4 { margin: 0; font-size: 1.1rem; }
        .status { font-size: 0.8rem; opacity: 0.8; }

        .close-btn {
            background: none; border: none; color: white; font-size: 1.2rem;
            cursor: pointer; margin-left: auto;
        }

        .chatbot-messages {
            flex: 1; padding: 1rem; overflow-y: auto;
            display: flex; flex-direction: column; gap: 1rem;
        }

        .message { display: flex; gap: 0.5rem; }
        .message.bot { justify-content: flex-start; }
        .message.user { justify-content: flex-end; }

        .message-bubble {
            max-width: 80%; padding: 0.75rem 1rem; border-radius: 15px;
            font-size: 0.9rem; line-height: 1.4;
        }

        .message.bot .message-bubble {
            background: rgba(255, 255, 255, 0.1); border-bottom-left-radius: 5px;
        }

        .message.user .message-bubble {
            background: var(--highlight); border-bottom-right-radius: 5px; color: white;
        }

        .quick-actions {
            display: flex; flex-wrap: wrap; gap: 0.5rem; margin-top: 0.5rem;
        }

        .quick-btn {
            background: rgba(233, 69, 96, 0.2); border: 1px solid var(--highlight);
            color: var(--highlight); padding: 0.5rem 0.75rem; border-radius: 15px;
            font-size: 0.8rem; cursor: pointer; transition: all 0.3s ease;
        }

        .quick-btn:hover { background: var(--highlight); color: white; }

        .chatbot-input {
            padding: 1rem; display: flex; gap: 0.5rem;
            border-top: 1px solid var(--glass-border);
        }

        .chatbot-input input {
            flex: 1; background: rgba(255, 255, 255, 0.1);
            border: 1px solid var(--glass-border); border-radius: 25px;
            padding: 0.75rem 1rem; color: var(--text); outline: none;
        }

        .chatbot-input button {
            background: var(--highlight); border: none; border-radius: 50%;
            width: 45px; height: 45px; color: white; cursor: pointer;
            transition: all 0.3s ease;
        }

        .chatbot-input button:hover { background: #d63551; }

        /* WhatsApp Float */
        .whatsapp-float {
            position: fixed; bottom: 2rem; left: 2rem; width: 60px; height: 60px;
            background: #25d366; border-radius: 50%; display: flex;
            align-items: center; justify-content: center; color: white;
            font-size: 1.5rem; text-decoration: none;
            box-shadow: 0 5px 20px rgba(37, 211, 102, 0.3);
            transition: all 0.3s ease; z-index: 999;
        }

        .whatsapp-float:hover { transform: scale(1.1); color: white; }

        /* Responsive */
        @media (max-width: 768px) {
            .hero { grid-template-columns: 1fr; text-align: center; padding: 4rem 1rem; }
            .hero-content h1 { font-size: 2.5rem; }
            .chatbot-window { width: calc(100vw - 2rem); right: 1rem; bottom: 80px; }
            .nav { display: none; }
        }

        /* Animations */
        @keyframes fadeInUp {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .animate-in { animation: fadeInUp 0.6s ease; }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="container">
            <div class="logo">
                <i class="fas fa-bolt"></i>
                Tesla Electricidad
            </div>
            <nav class="nav">
                <a href="#inicio">Inicio</a>
                <a href="#servicios">Servicios</a>
                <a href="#dashboard">Dashboard</a>
                <a href="#contacto">Contacto</a>
            </nav>
        </div>
    </header>
    <!-- Header -->
    <header class="header">
        <div class="container">
            <div class="logo">
                <i class="fas fa-bolt"></i>
                Tesla Electricidad
            </div>
            <nav class="nav">
                <a href="#inicio">Inicio</a>
                <a href="#servicios">Servicios</a>
                <a href="#dashboard">Dashboard</a>
                <a href="#contacto">Contacto</a>
            </nav>
        </div>
    </header>

    <!-- Hero Section -->
    <section id="inicio" class="hero">
        <div class="hero-content">
            <h1>Energ√≠a Inteligente para Huancayo</h1>
            <p>Especialistas en instalaciones el√©ctricas, automatizaci√≥n y certificaciones ITSE con m√°s de 10 a√±os de experiencia</p>
            <button class="cta-btn" onclick="openChat()">
                <i class="fas fa-robot"></i>
                Cotizar con IA
            </button>
        </div>
        <div class="hero-visual">
            <div class="dashboard-preview">
                <h3>Dashboard en Tiempo Real</h3>
                <div class="preview-metrics">
                    <div class="preview-metric">
                        <div class="metric-value">38</div>
                        <div class="metric-label">ITSE Completados</div>
                    </div>
                    <div class="preview-metric">
                        <div class="metric-value">48</div>
                        <div class="metric-label">Clientes Nuevos</div>
                    </div>
                    <div class="preview-metric">
                        <div class="metric-value">99%</div>
                        <div class="metric-label">Satisfacci√≥n</div>
                    </div>
                    <div class="preview-metric">
                        <div class="metric-value">108</div>
                        <div class="metric-label">Servicios Totales</div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Dashboard Section -->
    <section id="dashboard" class="dashboard-section">
        <div class="container">
            <h2>Nuestro Rendimiento 2024</h2>
            <div class="month-selector">
                <button class="month-btn" data-month="1">Ene</button>
                <button class="month-btn" data-month="2">Feb</button>
                <button class="month-btn" data-month="3">Mar</button>
                <button class="month-btn" data-month="4">Abr</button>
                <button class="month-btn" data-month="5">May</button>
                <button class="month-btn" data-month="6">Jun</button>
                <button class="month-btn" data-month="7">Jul</button>
                <button class="month-btn active" data-month="8">Ago</button>
            </div>
            <div class="metrics-grid" id="metricsGrid">
                <!-- Generado por JS -->
            </div>
        </div>
    </section>

    <!-- Services Section -->
    <section id="servicios" class="services-section">
        <div class="container">
            <h2>Nuestros Servicios Especializados</h2>
            <div class="services-grid">
                <div class="service-card">
                    <div class="service-gallery">
                        <div class="service-photo"><i class="fas fa-certificate"></i></div>
                        <div class="service-photo"><i class="fas fa-file-alt"></i></div>
                        <div class="service-photo"><i class="fas fa-check-circle"></i></div>
                    </div>
                    <h3>üìã Certificado ITSE</h3>
                    <p>Gesti√≥n completa para la Inspecci√≥n T√©cnica de Seguridad en Edificaciones, indispensable para tu licencia de funcionamiento.</p>
                </div>
                
                <div class="service-card">
                    <div class="service-gallery">
                        <div class="service-photo"><i class="fas fa-plug"></i></div>
                        <div class="service-photo"><i class="fas fa-tools"></i></div>
                        <div class="service-photo"><i class="fas fa-shield-alt"></i></div>
                    </div>
                    <h3>‚ö° Pozo de Tierra</h3>
                    <p>Instalaci√≥n y mantenimiento de sistemas de puesta a tierra para proteger equipos y personal contra descargas el√©ctricas.</p>
                </div>
                
                <div class="service-card">
                    <div class="service-gallery">
                        <div class="service-photo"><i class="fas fa-wrench"></i></div>
                        <div class="service-photo"><i class="fas fa-cogs"></i></div>
                        <div class="service-photo"><i class="fas fa-battery-full"></i></div>
                    </div>
                    <h3>üîß Mantenimiento El√©ctrico</h3>
                    <p>Planes de mantenimiento preventivo y correctivo para instalaciones comerciales e industriales.</p>
                </div>
                
                <div class="service-card">
                    <div class="service-gallery">
                        <div class="service-photo"><i class="fas fa-fire-extinguisher"></i></div>
                        <div class="service-photo"><i class="fas fa-exclamation-triangle"></i></div>
                        <div class="service-photo"><i class="fas fa-bell"></i></div>
                    </div>
                    <h3>üßØ Sistema Contra Incendios</h3>
                    <p>Dise√±o e instalaci√≥n de sistemas de detecci√≥n y alarma de incendios, cumpliendo normativas de seguridad.</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Chatbot -->
    <div class="chatbot-container">
        <button class="chatbot-toggle" onclick="toggleChat()">
            <i class="fas fa-robot"></i>
        </button>
        <div class="chatbot-window" id="chatbotWindow">
            <div class="chatbot-header">
                <div class="bot-avatar">
                    <i class="fas fa-robot"></i>
                </div>
                <div class="bot-info">
                    <h4>Tesla IA</h4>
                    <span class="status">‚óè En l√≠nea</span>
                </div>
                <button class="close-btn" onclick="closeChat()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="chatbot-messages" id="chatMessages">
                <div class="message bot">
                    <div class="message-bubble">
                        ¬°Hola! Soy Tesla IA, tu asistente especializado en servicios el√©ctricos. ¬øEn qu√© puedo ayudarte?
                        <div class="quick-actions">
                            <button class="quick-btn" onclick="sendQuickMessage('Certificado ITSE')">ITSE</button>
                            <button class="quick-btn" onclick="sendQuickMessage('Pozo de tierra')">Pozo Tierra</button>
                            <button class="quick-btn" onclick="sendQuickMessage('Mantenimiento')">Mantenimiento</button>
                            <button class="quick-btn" onclick="sendQuickMessage('Precios')">Precios</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="chatbot-input">
                <input type="text" id="messageInput" placeholder="Escribe tu mensaje...">
                <button onclick="sendMessage()">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- WhatsApp Button -->
    <a href="https://api.whatsapp.com/send?phone=51906315961&text=Hola,%20vengo%20de%20su%20p√°gina%20web." class="whatsapp-float" target="_blank">
        <i class="fab fa-whatsapp"></i>
    </a>

    <!-- Chatbot Section -->
    <div class="chatbot">
        <button class="chatbot-toggle" onclick="toggleChat()">ü§ñ</button>
        <div class="chatbot-window" id="chatWindow">
            <div class="chatbot-header">
                <h4>Tesla IA - Asistente El√©ctrico</h4>
            </div>
            <div class="chatbot-messages" id="messages">
                <div class="message bot">
                    ¬°Hola! Soy Tesla IA. ¬øEn qu√© servicio el√©ctrico puedo ayudarte?
                    <div style="margin-top: 0.5rem;">
                        <button onclick="sendMessage('Certificado ITSE')" style="background: var(--highlight); border: none; color: white; padding: 0.3rem 0.6rem; border-radius: 10px; margin: 0.2rem; cursor: pointer;">ITSE</button>
                        <button onclick="sendMessage('Pozo de tierra')" style="background: var(--highlight); border: none; color: white; padding: 0.3rem 0.6rem; border-radius: 10px; margin: 0.2rem; cursor: pointer;">Pozo</button>
                        <button onclick="sendMessage('Precios')" style="background: var(--highlight); border: none; color: white; padding: 0.3rem 0.6rem; border-radius: 10px; margin: 0.2rem; cursor: pointer;">Precios</button>
                    </div>
                </div>
            </div>
            <div class="chatbot-input">
                <input type="text" id="messageInput" placeholder="Escribe tu mensaje..." onkeypress="handleEnter(event)">
                <button onclick="sendMessage()">üì§</button>
            </div>
        </div>
    </div>

    <script>
        const API_URL = 'http://localhost:8000';
        let apiOnline = false;
        let chatOpen = false;

        // Verificar API
        fetch(API_URL + '/health')
            .then(() => apiOnline = true)
            .catch(() => console.log('API offline, usando datos locales'));

        function toggleChat() {
            const chatWindow = document.getElementById('chatWindow');
            chatOpen = !chatOpen;
            chatWindow.style.display = chatOpen ? 'block' : 'none';
        }

        function handleEnter(event) {
            if (event.key === 'Enter') {
                sendMessage();
            }
        }

        function sendMessage() {
            const input = document.getElementById('messageInput');
            const message = input.value.trim();
            
            if (message) {
                addMessage('user', message);
                input.value = '';
                
                // Simulate bot response
                setTimeout(() => {
                    addMessage('bot', 'Gracias por tu mensaje. ¬øEn qu√© puedo ayudarte hoy?');
                }, 1000);
            }
        }

        function addMessage(sender, text) {
            const messages = document.getElementById('messages');
            const messageElement = document.createElement('div');
            messageElement.className = `message ${sender}`;
            messageElement.textContent = text;
            messages.appendChild(messageElement);
            messages.scrollTop = messages.scrollHeight;
        }

        function toggleChat() {
            document.getElementById('chatWindow').classList.toggle('open');
        }

        function openChat() {
            document.getElementById('chatWindow').classList.add('open');
        }

        function askService(service) {
            openChat();
            const messages = {
                itse: 'Informaci√≥n sobre Certificado ITSE',
                pozo: 'Informaci√≥n sobre Pozo de Tierra',
                mantenimiento: 'Informaci√≥n sobre Mantenimiento',
                incendios: 'Informaci√≥n sobre Sistema Contra Incendios'
            };
            sendMessage(messages[service]);
        }

        function sendUserMessage() {
            const input = document.getElementById('messageInput');
            const message = input.value.trim();
            if (!message) return;
            
            addMessage('user', message);
            input.value = '';
            processMessage(message);
        }

        function sendMessage(message) {
            addMessage('user', message);
            processMessage(message);
        }

        function handleEnter(event) {
            if (event.key === 'Enter') sendUserMessage();
        }

        async function processMessage(message) {
            try {
                if (apiOnline) {
                    const response = await fetch(API_URL + '/chat', {
                        method: 'POST',
                        headers: {'Content-Type': 'application/json'},
                        body: JSON.stringify({message})
                    });
                    const data = await response.json();
                    addMessage('bot', data.response || getLocalResponse(message));
                } else {
                    setTimeout(() => addMessage('bot', getLocalResponse(message)), 1000);
                }
            } catch (error) {
                setTimeout(() => addMessage('bot', getLocalResponse(message)), 1000);
            }
        }

        function getLocalResponse(message) {
            const lower = message.toLowerCase();
            
            if (lower.includes('itse') || lower.includes('certificado')) {
                return `üìã <strong>Certificado ITSE</strong><br><br>
                <strong>Costos:</strong><br>
                ‚Ä¢ Municipalidad: S/ 218<br>
                ‚Ä¢ Nuestro servicio: S/ 300-500<br>
                ‚Ä¢ <strong>Total: S/ 518-718</strong><br><br>
                <strong>Tiempo:</strong> 5-10 d√≠as<br><br>
                ¬øAgendamos visita t√©cnica gratuita?<br>
                üì± WhatsApp: +51 906 315 961`;
            }
            
            if (lower.includes('pozo') || lower.includes('tierra')) {
                return `‚ö° <strong>Pozo de Tierra</strong><br><br>
                <strong>Precio:</strong> S/ 1,500 - 2,500<br><br>
                Var√≠a seg√∫n:<br>
                ‚Ä¢ Tipo de terreno<br>
                ‚Ä¢ Resistividad del suelo<br>
                ‚Ä¢ Profundidad requerida<br><br>
                üÜì Visita t√©cnica gratuita<br>
                üì± WhatsApp: +51 906 315 961`;
            }
            
            if (lower.includes('mantenimiento')) {
                return `üîß <strong>Mantenimiento El√©ctrico</strong><br><br>
                <strong>Tipos:</strong><br>
                ‚Ä¢ Preventivo: S/ 200-400<br>
                ‚Ä¢ Correctivo: S/ 500-1,200<br>
                ‚Ä¢ Emergencia 24h: S/ 150/hora<br><br>
                üì± WhatsApp: +51 906 315 961`;
            }
            
            if (lower.includes('precio') || lower.includes('costo')) {
                return `üí∞ <strong>Precios Referenciales 2024</strong><br><br>
                üìã ITSE: S/ 518 - 1,218<br>
                ‚ö° Pozo Tierra: S/ 1,500 - 2,500<br>
                üîß Mantenimiento: S/ 200 - 1,200<br>
                üßØ Contra Incendios: Desde S/ 1,500<br><br>
                üì± WhatsApp: +51 906 315 961`;
            }
            
            return `Soy Tesla IA, especialista en servicios el√©ctricos.<br><br>
            ¬øSobre qu√© necesitas informaci√≥n?<br>
            ‚Ä¢ üìã Certificado ITSE<br>
            ‚Ä¢ ‚ö° Pozo de Tierra<br>
            ‚Ä¢ üîß Mantenimiento<br>
            ‚Ä¢ üßØ Sistema Contra Incendios<br><br>
            üì± WhatsApp: +51 906 315 961`;
        }

        function addMessage(sender, content) {
            const messages = document.getElementById('messages');
            const div = document.createElement('div');
            div.className = `message ${sender}`;
            div.innerHTML = content;
            messages.appendChild(div);
            messages.scrollTop = messages.scrollHeight;
        }
    </script>
</body>
</html>
''')

    # Write the rest of the HTML content
    html_content = '''
    <!-- Rest of the HTML content goes here -->
    </body>
</html>'''

    # BACKEND PYTHON COMPLETO
    with open("tesla_complete/backend/main.py", "w", encoding="utf-8") as f:
        f.write('''from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
import sqlite3
import os

app = FastAPI(title="Tesla Electricidad API")

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"]
)

class ChatMessage(BaseModel):
    message: str

# Inicializar BD
def init_db():
    os.makedirs("data", exist_ok=True)
    conn = sqlite3.connect("data/tesla.db")
    cursor = conn.cursor()
    
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS conversations (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_message TEXT,
            bot_response TEXT,
            timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    """)
    
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS contacts (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT,
            phone TEXT,
            service TEXT,
            message TEXT,
            created_at DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    """)
    
    conn.commit()
    conn.close()

@app.on_event("startup")
async def startup():
    init_db()
    print("üöÄ Tesla API iniciada en http://localhost:8000")

@app.get("/")
async def root():
    return {"message": "Tesla Electricidad API", "status": "online"}

@app.get("/health")
async def health():
    return {"status": "healthy"}

@app.post("/chat")
async def chat(message_data: ChatMessage):
    try:
        response = process_chat(message_data.message)
        
        # Guardar conversaci√≥n
        conn = sqlite3.connect("data/tesla.db")
        cursor = conn.cursor()
        cursor.execute(
            "INSERT INTO conversations (user_message, bot_response) VALUES (?, ?)",
            (message_data.message, response)
        )
        conn.commit()
        conn.close()
        
        return {"success": True, "response": response}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))

def process_chat(message: str) -> str:
    """Procesador de chat con IA simulada"""
    lower = message.lower()
    
    if any(word in lower for word in ['itse', 'certificado', 'inspecci√≥n']):
        return """üìã **Certificado ITSE - Informaci√≥n Completa**

**Costos Referenciales:**
‚Ä¢ Pago municipalidad: S/ 218.00
‚Ä¢ Nuestro servicio: S/ 300.00 - S/ 500.00
‚Ä¢ **Total aproximado: S/ 518.00 - S/ 718.00**

**Tiempo estimado:** 5-10 d√≠as h√°biles

**Proceso incluye:**
1. Evaluaci√≥n t√©cnica completa
2. Elaboraci√≥n de planos (si es necesario)  
3. Gesti√≥n del tr√°mite municipal
4. Seguimiento hasta obtenci√≥n

**¬øQu√© tipo de negocio certificar√°s?**
‚Ä¢ Comercio b√°sico: S/ 518-718
‚Ä¢ Restaurante/Bar: S/ 718-1,218
‚Ä¢ Industrial: S/ 1,218+

¬øTe gustar√≠a agendar una **visita t√©cnica gratuita**?
üì± WhatsApp: +51 906 315 961"""

    elif any(word in lower for word in ['pozo', 'tierra', 'puesta']):
        return """‚ö° **Pozo de Tierra - Sistema de Seguridad**

**Precio referencial:** S/ 1,500 - S/ 2,500

**El costo var√≠a seg√∫n:**
‚Ä¢ Tipo de terreno (arcilloso, arenoso, rocoso)
‚Ä¢ Resistividad del suelo medida
‚Ä¢ Profundidad requerida
‚Ä¢ Materiales necesarios

**Proceso de instalaci√≥n:**
1. Medici√≥n de resistividad del terreno
2. Dise√±o del sistema seg√∫n normativa
3. Excavaci√≥n e instalaci√≥n
4. Pruebas y certificaci√≥n final

üÜì **Realizamos visita t√©cnica gratuita** para dar precio exacto.
üì± WhatsApp: +51 906 315 961"""

    elif any(word in lower for word in ['mantenimiento', 'reparaci√≥n']):
        return """üîß **Mantenimiento El√©ctrico - Preventivo y Correctivo**

**Tipos de mantenimiento:**
‚Ä¢ **Preventivo:** S/ 200 - S/ 400 - Inspecciones programadas
‚Ä¢ **Correctivo:** S/ 500 - S/ 1,200 - Reparaci√≥n de fallas  
‚Ä¢ **Emergencia 24h:** S/ 150/hora + materiales

**¬øQu√© revisamos?**
‚Ä¢ Tableros el√©ctricos y conexiones
‚Ä¢ Sistema de protecci√≥n y puesta a tierra
‚Ä¢ Medici√≥n de aislamientos
‚Ä¢ Limpieza y ajuste de contactos
‚Ä¢ Termograf√≠a predictiva (opcional)

**Plan anual:** 15% descuento
üì± WhatsApp: +51 906 315 961"""

    elif any(word in lower for word in ['precio', 'costo', 'cuanto']):
        return """üí∞ **Lista de Precios Referenciales 2024**

üìã **Certificado ITSE:**
‚Ä¢ Comercio b√°sico: S/ 518 - 718
‚Ä¢ Restaurante/Bar: S/ 718 - 1,218  
‚Ä¢ Industrial: S/ 1,218 - 2,218

‚ö° **Pozo de Tierra:**
‚Ä¢ Residencial: S/ 1,200 - 1,800
‚Ä¢ Comercial: S/ 1,500 - 2,500
‚Ä¢ Industrial: S/ 2,500 - 4,500

üîß **Mantenimiento:**
‚Ä¢ Preventivo: S/ 200 - 400
‚Ä¢ Correctivo: S/ 500 - 1,200
‚Ä¢ Plan anual: 15% descuento

üßØ **Sistema Contra Incendios:**
‚Ä¢ Detecci√≥n b√°sica: S/ 1,500+
‚Ä¢ Sistema completo: Cotizaci√≥n personalizada

*Precios incluyen materiales b√°sicos. Pueden variar seg√∫n especificaciones t√©cnicas.*
üì± WhatsApp: +51 906 315 961"""

    elif any(word in lower for word in ['contacto', 'ubicaci√≥n', 'tel√©fono']):
        return """üìû **Informaci√≥n de Contacto - Tesla Electricidad**

üìç **Direcci√≥n:** Jr. Los Narcisos Mz H Lote 4, Urb. San Carlos, Huancayo, Jun√≠n
üì± **WhatsApp/Tel:** +51 906 315 961
üìß **Email:** contacto@tesla-electricidad.pe
‚è∞ **Horarios:** Lun-Vie: 8AM-6PM, S√°b: 8AM-1PM
üÜò **Emergencias:** 24/7

üöó **Cobertura:** Huancayo y toda la regi√≥n Jun√≠n
üõ†Ô∏è **Especialistas certificados** con m√°s de 10 a√±os de experiencia"""

    else:
        return """¬°Hola! Soy Tesla IA, tu asistente especializado en servicios el√©ctricos.

**¬øEn qu√© puedo ayudarte?**
‚Ä¢ üìã **Certificado ITSE** - Gesti√≥n completa
‚Ä¢ ‚ö° **Pozo de Tierra** - Seguridad el√©ctrica  
‚Ä¢ üîß **Mantenimiento** - Preventivo y correctivo
‚Ä¢ üßØ **Sistema Contra Incendios** - Protecci√≥n total
‚Ä¢ üí∞ **Consultar precios** - Rangos referenciales
‚Ä¢ üìû **Informaci√≥n de contacto**

**Empresa confiable:** +10 a√±os de experiencia, +500 proyectos exitosos
üì± WhatsApp directo: +51 906 315 961

Escribe tu consulta o selecciona un tema de inter√©s."""

if __name__ == "__main__":
    import uvicorn
    uvicorn.run("main:app", host="0.0.0.0", port=8000, reload=True)
''')

    # REQUIREMENTS.TXT
    with open("tesla_complete/backend/requirements.txt", "w") as f:
        f.write('''fastapi==0.104.1
uvicorn==0.24.0
python-dotenv==1.0.0
sqlite3
''')

    # DOCKER COMPOSE
    with open("tesla_complete/docker-compose.yml", "w") as f:
        f.write('''version: '3.8'
services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    working_dir: /app
    command: python main.py

  frontend:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
''')

    # DOCKERFILE BACKEND
    with open("tesla_complete/backend/Dockerfile", "w") as f:
        f.write('''FROM python:3.11-slim
WORKDIR /app
COPY requirements.txt .
RUN pip install -r requirements.txt
COPY . .
CMD ["python", "main.py"]
''')

    # SCRIPTS DE INICIO
    with open("tesla_complete/start.py", "w") as f:
        f.write('''#!/usr/bin/env python3
import subprocess
import sys
import os
import webbrowser
import time

def install_requirements():
    """Instalar dependencias Python"""
    print("üì¶ Instalando dependencias...")
    subprocess.run([sys.executable, "-m", "pip", "install", "-r", "backend/requirements.txt"])

def start_backend():
    """Iniciar backend"""
    print("üöÄ Iniciando backend...")
    os.chdir("backend")
    subprocess.Popen([sys.executable, "main.py"])
    os.chdir("..")

def start_frontend():
    """Abrir frontend"""
    print("üåê Abriendo frontend...")
    time.sleep(3)  # Esperar que inicie el backend
    webbrowser.open("frontend/index.html")

def main():
    print("üèóÔ∏è  Tesla Electricidad - Iniciando proyecto completo...")
    
    # Cambiar al directorio del proyecto
    os.chdir("tesla_complete")
    
    # Instalar dependencias
    install_requirements()
    
    # Iniciar backend
    start_backend()
    
    # Abrir frontend
    start_frontend()
    
    print("‚úÖ Proyecto iniciado:")
    print("   - Backend: http://localhost:8000")
    print("   - Frontend: Abriendo en navegador")
    print("   - API Docs: http://localhost:8000/docs")
    print("\\nüî• ¬°Tu chatbot Tesla est√° listo!")
    print("\\nPresiona Ctrl+C para detener")
    
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\\nüëã Proyecto detenido")

if __name__ == "__main__":
    main()
''')

    # README
    with open("tesla_complete/README.md", "w", encoding="utf-8") as f:
        f.write('''# Tesla Electricidad - Chatbot IA Completo

## üöÄ Inicio R√°pido

```bash
python start.py
```

## üìÅ Estructura
```
tesla_complete/
‚îú‚îÄ‚îÄ frontend/
‚îÇ   ‚îî‚îÄ‚îÄ index.html      # Web completa con chatbot
‚îú‚îÄ‚îÄ backend/
‚îÇ   ‚îú‚îÄ‚îÄ main.py         # API FastAPI
‚îÇ   ‚îî‚îÄ‚îÄ requirements.txt
‚îú‚îÄ‚îÄ docker-compose.yml
‚îî‚îÄ‚îÄ start.py           # Script de inicio
```

## üõ†Ô∏è Funcionalidades

### Frontend
- ‚úÖ Dashboard interactivo con m√©tricas
- ‚úÖ Chatbot Tesla IA completamente funcional
- ‚úÖ Respuestas especializadas en servicios el√©ctricos
- ‚úÖ Integraci√≥n WhatsApp
- ‚úÖ Dise√±o responsivo moderno

### Backend  
- ‚úÖ API FastAPI con SQLite
- ‚úÖ Procesador de chat inteligente
- ‚úÖ Base de conocimiento especializada
- ‚úÖ Almacenamiento de conversaciones
- ‚úÖ CORS habilitado

### Servicios Incluidos
- üìã Certificado ITSE (S/ 518-718)
- ‚ö° Pozo de Tierra (S/ 1,500-2,500)  
- üîß Mantenimiento (S/ 200-1,200)
- üßØ Sistema Contra Incendios (Desde S/ 1,500)

## üîß Comandos

**Desarrollo:**
```bash
# Backend
cd backend && python main.py

# Frontend  
Abrir frontend/index.html en navegador
```

**Producci√≥n:**
```bash
docker-compose up --build
```

## üì± Integraci√≥n WhatsApp
WhatsApp: +51 906 315 961
Telegram: @tesla_electricidad_bot

## üéØ URLs
- Frontend: http://localhost:3000
- Backend API: http://localhost:8000  
- Docs: http://localhost:8000/docs

¬°Tu chatbot Tesla est√° listo para convertir visitantes en clientes!
''')

    print("‚úÖ PROYECTO TESLA COMPLETO GENERADO")
    print("\nüöÄ Para ejecutar:")
    print("   cd tesla_complete")
    print("   python start.py")
    print("\nüìÅ Archivos creados:")
    print("   - Frontend completo con chatbot IA")  
    print("   - Backend FastAPI con SQLite")
    print("   - Docker setup")
    print("   - Scripts de inicio")
    print("\nüéØ Resultado: Web funcional + Chatbot especializado + API")

if __name__ == "__main__":
    create_tesla_project()