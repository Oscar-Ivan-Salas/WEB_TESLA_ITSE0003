version: '3.8'

services:
  # Frontend Nginx
  frontend:
    build:
      context: ./tesla_complete/frontend
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    volumes:
      - ./tesla_complete/frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - tesla-network
    environment:
      - NODE_ENV=production
      - API_URL=http://backend:8000
    restart: unless-stopped

  # Backend Python FastAPI
  backend:
    build:
      context: ./tesla_complete/backend
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      - ./tesla_complete/backend:/app
      - tesla-data:/app/data
    networks:
      - tesla-network
    environment:
      - DATABASE_URL=sqlite:///data/tesla.db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - WHATSAPP_NUMBER=${WHATSAPP_NUMBER}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para cach√© y sesiones
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - tesla-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx Proxy Manager para SSL
  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    networks:
      - tesla-network
    restart: unless-stopped

  # SSL Companion
  ssl-companion:
    image: nginxproxy/acme-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs:rw
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
    environment:
      - DEFAULT_EMAIL=admin@teslaelectricidad.com
    depends_on:
      - nginx-proxy
    networks:
      - tesla-network
    restart: unless-stopped

  # Monitoring con Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - tesla-network
    restart: unless-stopped

  # Grafana para dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-config.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    networks:
      - tesla-network
    restart: unless-stopped

volumes:
  tesla-data:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  tesla-network:
    driver: bridge
    restart: unless-stopped
